# generated by datamodel-codegen:
#   filename:  cms.yaml
#   timestamp: 2025-07-18T07:27:42+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class CustomField(BaseModel):
    description: Optional[str] = Field(
        None, description="description (instruction for user)"
    )
    display_name: Optional[str] = Field(None, description="display name")
    enum_values: Optional[List[str]] = Field(
        None, description="array of string values for select type fields"
    )
    id: Optional[str] = Field(
        None,
        description="data name for the field (used to access it in searches, etc.)",
    )
    required: Optional[bool] = Field(
        False, description="whether field must have a value before video can be active"
    )
    type: Optional[str] = Field(None, description="custom field type (enum or string)")


class StandardField(BaseModel):
    description: Optional[str] = Field(
        None, description="description (instruction for user)"
    )
    id: Optional[str] = Field(
        None,
        description="data name for the field (used to access it in searches, etc.)",
    )
    required: Optional[bool] = Field(
        None, description="whether field must have a value before video can be active"
    )
